openapi: 3.0.1
info:
   version: 1.0.0
   title: MajiCode Budget Application
   description: A set of API to allow running of the Budget App
   license:
      name: MIT
tags:
-  name: income
   description: API for interacting with the incomes
-  name: group
   description: API for interacting with groups
paths:
   /income:
      get:
         summary: List all Incomes
         description: Retrieves the full list of all the Incomes in the budget app
         operationId: listIncomes
         tags:
         - income
         parameters:
         -  name: limit
            in: query
            description: How many Incomes to return at one time (max 100)
            required: false
            schema:
               type: integer
               format: int32
               default: 0
         responses:
            200:
               description: A list of Incomes
               content:
                  application/json:
                     schema:
                        type: array
                        items:
                           $ref: '#/components/schemas/Income'
            default:
               description: Unexpected error
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Error'
      post:
         tags:
         - income
         summary: Add a new income to the budget
         description: Adds a new Income for a specific amount on a given date
         operationId: addIncome
         requestBody:
            description: Income object that needs to be added to the budget
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Income'
         responses:
            200:
               description: Expected response to a valid request
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Income'
            400:
               description: Income information is invalid.
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Error'
            405:
               description: Invalid input
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Error'
      put:
         tags:
         - income
         summary: Update an existing Income
         operationId: updateIncome
         requestBody:
            description: Income object that needs to be updated in the budget
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Income'
         responses:
            400:
               description: Invalid ID supplied
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Error'
            404:
               description: Income not found
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Error'
            405:
               description: Validation exception
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Error'
   /income/{incomeId}:
      get:
         tags:
         - income
         summary: Info for a specific Income
         operationId: showIncomeById
         parameters:
         -  name: incomeId
            in: path
            required: true
            description: The id of the income to retrieve
            schema:
               type: string
         responses:
            200:
               description: Expected response to a valid request
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Income'
   /income/findByDate:
      get:
         tags:
         - income
         summary: Find income by specific date
         operationId: findIncomeByDate
         parameters:
         -  in: query
            name: date
            description: Date the income was created
            required: true
            schema:
               type: string
         responses:
            200:
               description: successful operation
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Income'
            400:
               description: Invalid date provided
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Error'
            404:
               description: Income not found
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Error'
components:
   schemas:
      Income:
         description: Income information
         type: object
         required:
         - name
         properties:
            id:
               type: string
               minLength: 1
               example: 939e02dc-f268-4251-9cd2-6632a5221e64
            name:
               type: string
               minLength: 1
               example: Pentagon paycheck
            plannedAmount:
               type: number
               format: double
               example: 4000.00
            receivedAmount:
               type: number
               format: double
               example: 3900.00
            dateCreated:
               type: string
               minLength: 10
               example: 2020-10-31
            dateUpdated:
               type: string
               minLength: 10
               example: 2020-11-01
      Error:
         description: Error message sent back
         type: object
         required:
         - code
         - type
         - message
         properties:
            code:
               type: integer
               format: int32
            type:
               type: string
               minLength: 1
            message:
               type: string
               minLength: 1